import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;

public class ReportGenerator extends AbstractReportGenerator {
    private PageBuilder pageBuilder;
    private TableBuilder tableBuilder;
    private DataFormatter dataFormatter;

    public ReportGenerator() {
        this.pageBuilder = new PageBuilder();
        this.tableBuilder = new TableBuilder();
        this.dataFormatter = new DataFormatter();
    }

    @Override
    public void generateReport(File outputFile) throws IOException {
        try (OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(outputFile))) {
            HTMLDocument page = pageBuilder.createPage(REPORT_HEADER_TITLE);
            pageBuilder.addPageHeader(page, null, null);
            pageBuilder.addPageFooter(page, null, null);

            HTMLTable summaryTable = tableBuilder.createSummaryTable();
            page.add(summaryTable);

            page.emit(out);
            out.flush();
        }
    }
}

public class PageBuilder {
    private static final String REPORT_HEADER_TITLE = "EMMA Coverage Report";

    public HTMLDocument createPage(String title) {
        HTMLDocument page = new HTMLDocument();
        page.setTitle(title);
        return page;
    }

    public void addPageHeader(HTMLDocument page, IItem item, IItem[] path) {
        IElementList header = new ElementList();
        header.add(new Text("Coverage Report Header", true));
        page.add(header);
    }

    public void addPageFooter(HTMLDocument page, IItem item, IItem[] path) {
        IElementList footer = new ElementList();
        footer.add(new Text("Generated by EMMA", true));
        page.add(footer);
    }
}

public class TableBuilder {
    public HTMLTable createSummaryTable() {
        HTMLTable table = new HTMLTable("100%", null, null, "0");
        table.setClass("summary-table");

        // Adicionar cabe√ßalho da tabela
        String[] headers = {"Metric", "Value"};
        for (String header : headers) {
            table.addHeaderCell(header);
        }

        // Adicionar linhas de dados (exemplo)
        table.addRow(new String[]{"Lines Covered", "85%"});
        table.addRow(new String[]{"Branches Covered", "75%"});

        return table;
    }
}

public class DataFormatter {
    private DecimalFormat format;
    private FieldPosition fieldPosition;

    public DataFormatter() {
        this.format = (DecimalFormat) DecimalFormat.getPercentInstance();
        this.fieldPosition = new FieldPosition(DecimalFormat.INTEGER_FIELD);
        this.format.setMaximumFractionDigits(0);
    }

    public String formatPercentage(double value) {
        return format.format(value, new StringBuffer(), fieldPosition).toString();
    }
}

public class HTMLTable extends cern.colt.matrix.html.HTMLTable {
    public HTMLTable(String width, String border, String cellspacing, String cellpadding) {
        super(width, border, cellspacing, cellpadding);
    }

    public void addHeaderCell(String text) {
        addCell(text, "header-cell");
    }

    public void addRow(String[] rowData) {
        for (String cellData : rowData) {
            addCell(cellData, "data-cell");
        }
    }

    private void addCell(String text, String cssClass) {
        IElement cell = IElement.Factory.create(Tag.TD);
        cell.setText(text, true);
        cell.setClass(cssClass);
        add(cell);
    }
}

public class Text implements IContent {
    private String content;
    private boolean escapeHtml;

    public Text(String content, boolean escapeHtml) {
        this.content = content;
        this.escapeHtml = escapeHtml;
    }

    @Override
    public String toString() {
        return escapeHtml ? escapeHtml(content) : content;
    }

    private String escapeHtml(String input) {
        return input.replace("&", "&amp;")
                    .replace("<", "<")
                    .replace(">", ">")
                    .replace("\"", "&quot;")
                    .replace("'", "&#39;");
    }
}